class PackageURL
  VERSION: String

  class InvalidPackageURL < ArgumentError
  end

  def scheme: () -> String
  attr_reader type: String
  attr_reader namespace: String?
  attr_reader name: String?
  attr_reader version: String?
  attr_reader qualifiers: Hash[String, String]?
  attr_reader subpath: String?

  def initialize: (type: String `type`,
                   ?namespace: String? namespace,
                   name: String name,
                   ?version: String? version,
                   ?qualifiers: Hash[String, String]? qualifiers,
                   ?subpath: String? subpath) -> void

  def self.parse: (String string) -> PackageURL

  def to_h: () -> { scheme: String,
                    type: String,
                    namespace: String?,
                    name: String?,
                    version: String?,
                    qualifiers: Hash[String, String]?,
                    subpath: String? }

  def to_s: () -> String

  def deconstruct: () -> Array[String | Hash[String, String] | nil]

  def deconstruct_keys: (Array[Symbol] keys) -> { scheme: String,
                                                  type: String,
                                                  namespace: String?,
                                                  name: String?,
                                                  version: String?,
                                                  qualifiers: Hash[String, String]?,
                                                  subpath: String? }
end
